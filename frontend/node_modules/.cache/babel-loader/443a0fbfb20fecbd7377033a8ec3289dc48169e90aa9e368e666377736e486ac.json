{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jnthn\\\\OneDrive\\\\Desktop\\\\High projects\\\\jirams_starter\\\\frontend\\\\src\\\\auth\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from \"react\";\nimport api from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n\n  // ✅ Restore user + token from localStorage on refresh\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    const storedToken = localStorage.getItem(\"token\");\n    if (storedUser && storedToken) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n\n  // --- Login handler ---\n  const login = async (email, password) => {\n    var _data$user, _data$user2;\n    const params = new URLSearchParams();\n    params.append(\"username\", email);\n    params.append(\"password\", password);\n    const res = await api.post(\"/auth/token\", params, {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    });\n    const data = res.data;\n    console.log(\"🔍 Raw backend login response:\", data);\n\n    // ✅ Normalize response (support both `user.role` or `roles`)\n    const role = ((_data$user = data.user) === null || _data$user === void 0 ? void 0 : _data$user.role) || (Array.isArray(data.roles) ? data.roles[0] : null);\n    if (!role) {\n      throw new Error(\"No role found in response\");\n    }\n    const loggedInUser = {\n      email: ((_data$user2 = data.user) === null || _data$user2 === void 0 ? void 0 : _data$user2.email) || data.email,\n      role,\n      // keep role as a single string for easier redirects\n      roles: [role] // also provide array for RoleGuard compatibility\n    };\n\n    // ✅ Save to state + localStorage\n    setUser(loggedInUser);\n    localStorage.setItem(\"user\", JSON.stringify(loggedInUser));\n    localStorage.setItem(\"token\", data.access_token);\n    return loggedInUser; // frontend expects role here\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"token\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","storedUser","localStorage","getItem","storedToken","JSON","parse","login","email","password","_data$user","_data$user2","params","URLSearchParams","append","res","post","headers","data","console","log","role","Array","isArray","roles","Error","loggedInUser","setItem","stringify","access_token","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/jnthn/OneDrive/Desktop/High projects/jirams_starter/frontend/src/auth/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from \"react\";\nimport api from \"../api\";\n\nconst AuthContext = createContext();\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n\n  // ✅ Restore user + token from localStorage on refresh\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    const storedToken = localStorage.getItem(\"token\");\n    if (storedUser && storedToken) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n\n  // --- Login handler ---\n  const login = async (email, password) => {\n    const params = new URLSearchParams();\n    params.append(\"username\", email);\n    params.append(\"password\", password);\n\n    const res = await api.post(\"/auth/token\", params, {\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n    });\n\n    const data = res.data;\n    console.log(\"🔍 Raw backend login response:\", data);\n\n    // ✅ Normalize response (support both `user.role` or `roles`)\n    const role = data.user?.role || (Array.isArray(data.roles) ? data.roles[0] : null);\n\n    if (!role) {\n      throw new Error(\"No role found in response\");\n    }\n\n    const loggedInUser = {\n      email: data.user?.email || data.email,\n      role,            // keep role as a single string for easier redirects\n      roles: [role],   // also provide array for RoleGuard compatibility\n    };\n\n    // ✅ Save to state + localStorage\n    setUser(loggedInUser);\n    localStorage.setItem(\"user\", JSON.stringify(loggedInUser));\n    localStorage.setItem(\"token\", data.access_token);\n\n    return loggedInUser; // frontend expects role here\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"token\");\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jnthn\\\\OneDrive\\\\Desktop\\\\High projects\\\\jirams_starter\\\\frontend\\\\src\\\\pages\\\\civilian\\\\CaseStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport api from \"../../api\";\nimport { ListGroup, Spinner, Alert } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CaseStatus() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [statusLogs, setStatusLogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetchStatus = async () => {\n      try {\n        const res = await api.get(`/cases/${id}/status`);\n        setStatusLogs(res.data);\n      } catch (err) {\n        setError(\"Failed to fetch case status\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchStatus();\n  }, [id]);\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {\n    animation: \"border\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Alert, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83D\\uDCCA Case Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: statusLogs.map((log, idx) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: log.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), \": \", log.status]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(CaseStatus, \"b9fiikgmxC49+i4mZg2hGE4+a2c=\", false, function () {\n  return [useParams];\n});\n_c = CaseStatus;\nvar _c;\n$RefreshReg$(_c, \"CaseStatus\");","map":{"version":3,"names":["React","useEffect","useState","useParams","api","ListGroup","Spinner","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","CaseStatus","_s","id","statusLogs","setStatusLogs","loading","setLoading","error","setError","fetchStatus","res","get","data","err","animation","fileName","_jsxFileName","lineNumber","columnNumber","variant","children","map","log","idx","Item","date","status","_c","$RefreshReg$"],"sources":["C:/Users/jnthn/OneDrive/Desktop/High projects/jirams_starter/frontend/src/pages/civilian/CaseStatus.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport api from \"../../api\";\r\nimport { ListGroup, Spinner, Alert } from \"react-bootstrap\";\r\n\r\nexport default function CaseStatus() {\r\n  const { id } = useParams();\r\n  const [statusLogs, setStatusLogs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchStatus = async () => {\r\n      try {\r\n        const res = await api.get(`/cases/${id}/status`);\r\n        setStatusLogs(res.data);\r\n      } catch (err) {\r\n        setError(\"Failed to fetch case status\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchStatus();\r\n  }, [id]);\r\n\r\n  if (loading) return <Spinner animation=\"border\" />;\r\n  if (error) return <Alert variant=\"danger\">{error}</Alert>;\r\n\r\n  return (\r\n    <>\r\n      <h3>ðŸ“Š Case Status</h3>\r\n      <ListGroup>\r\n        {statusLogs.map((log, idx) => (\r\n          <ListGroup.Item key={idx}>\r\n            <b>{log.date}</b>: {log.status}\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,GAAG,MAAM,WAAW;AAC3B,SAASC,SAAS,EAAEC,OAAO,EAAEC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5D,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM;IAAEC;EAAG,CAAC,GAAGX,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMoB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMlB,GAAG,CAACmB,GAAG,CAAC,UAAUT,EAAE,SAAS,CAAC;QAChDE,aAAa,CAACM,GAAG,CAACE,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZL,QAAQ,CAAC,6BAA6B,CAAC;MACzC,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDG,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACP,EAAE,CAAC,CAAC;EAER,IAAIG,OAAO,EAAE,oBAAOR,OAAA,CAACH,OAAO;IAACoB,SAAS,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAClD,IAAIX,KAAK,EAAE,oBAAOV,OAAA,CAACF,KAAK;IAACwB,OAAO,EAAC,QAAQ;IAAAC,QAAA,EAAEb;EAAK;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;EAEzD,oBACErB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAc;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBrB,OAAA,CAACJ,SAAS;MAAA2B,QAAA,EACPjB,UAAU,CAACkB,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACvB1B,OAAA,CAACJ,SAAS,CAAC+B,IAAI;QAAAJ,QAAA,gBACbvB,OAAA;UAAAuB,QAAA,EAAIE,GAAG,CAACG;QAAI;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,MAAE,EAACI,GAAG,CAACI,MAAM;MAAA,GADXH,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAER,CACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAAA,eACZ,CAAC;AAEP;AAACjB,EAAA,CAnCuBD,UAAU;EAAA,QACjBT,SAAS;AAAA;AAAAoC,EAAA,GADF3B,UAAU;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}